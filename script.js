/*
  This is your site JavaScript code - you can add interactivity!
*/

// Print a message in the browser's dev tools console each time the page loads
// Use your menus or right-click / control-click and choose "Inspect" > "Console"
console.log("Hello ðŸŒŽ");

/* 
Make the "Click me!" button move when the visitor clicks it:
- First add the button to the page by following the steps in the TODO ðŸš§
*/


const cards = {
  arco: ["Crescimento - Uma dÃ©cada", "Crescimento - Duas geraÃ§Ãµes", "Crescimento - Um sÃ©culo", "Crescimento - Um milÃªnio",
        //"Colapso - Uma dÃ©cada", "Colapso - Duas geraÃ§Ãµes", "Colapso - Um sÃ©culo", "Colapso - Um milÃªnio",
        "Disciplina - Uma dÃ©cada",  "Disciplina - Duas geraÃ§Ãµes", "Disciplina - Um sÃ©culo", "Disciplina - Um milÃªnio",
        "TransformaÃ§Ã£o - Uma dÃ©cada", "TransformaÃ§Ã£o - Duas geraÃ§Ãµes","TransformaÃ§Ã£o - Um sÃ©culo","TransformaÃ§Ã£o - Um milÃªnio"], /*o tipo de futuro de onde a coisa vem e o quao distante estÃ¡ de hoje*/
  terreno: ["Fissura", "Fluxo", "AcÃºmulo", "Trama", "RessonÃ¢ncia", "Ruptura"], /*contexto temÃ¡tico ou local onde o objeto poderia ser encontrado no futuro*/
  objeto: ["Uma instalaÃ§Ã£o para incorporar cultura ancestral urbana", "Uma instalaÃ§Ã£o sobre escuta, memÃ³ria e reparaÃ§Ã£o", "Uma instalaÃ§Ã£o para fortalecer o convÃ­vio e reciprocidade com a natureza", "Uma instalaÃ§Ã£o dedicada a valorizar o movimento do corpo e rituais", "Uma instalaÃ§Ã£o como espaÃ§o para a oralidade intergeracional", "Uma instalaÃ§Ã£o que debate a transiÃ§Ã£o climÃ¡tica"], /*o foco para a imaginaÃ§Ã£o: um artefato especÃ­fico que revel alguma coisa sobre como esse futuro Ã© diferente de hoje*/ 
  atmosfera: ["EsperanÃ§a", "Calma", "Otimismo", "DiversÃ£o", "FascinaÃ§Ã£o", "Bem-estar"] /*qual Ã© o sentimento que aflora ao experienciar essa coisa do futuro*/
};

const drawn = {};

function drawCard(type) {
  const options = cards[type];
  const random = options[Math.floor(Math.random() * options.length)];
  drawn[type] = random;

  renderDrawnCards();
}

function renderDrawnCards() {
  const ul = document.getElementById('drawn-cards');
  ul.innerHTML = ''; // Limpa

  Object.keys(drawn).forEach(type => {
    const li = document.createElement('li');
    li.textContent = `${type.toUpperCase()}: ${drawn[type]}`;
    ul.appendChild(li);
  });
}

